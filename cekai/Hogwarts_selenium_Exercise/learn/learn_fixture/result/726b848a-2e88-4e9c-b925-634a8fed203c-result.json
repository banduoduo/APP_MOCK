{"name": "test_add_all[float1]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 0.4 == 1.0\n +  where 1.0 = <bound method TestCalcula.add of <Hogwarts_pytest_2.learn.learn_fixture.Calculator.TestCalcula object at 0x111a2e040>>(0.2, 0.8)\n +    where <bound method TestCalcula.add of <Hogwarts_pytest_2.learn.learn_fixture.Calculator.TestCalcula object at 0x111a2e040>> = <Hogwarts_pytest_2.learn.learn_fixture.Calculator.TestCalcula object at 0x111a2e040>.add", "trace": "self = <Hogwarts_pytest_2.learn.learn_fixture.test_cal.TestJSQ object at 0x111a94730>\ngetint_class = <Hogwarts_pytest_2.learn.learn_fixture.Calculator.TestCalcula object at 0x111a2e040>, get_add = [0.2, 0.8, 0.4]\n\n    @allure.story(\"相加\")\n    def test_add_all(self, getint_class, get_add):\n>       assert get_add[2] == getint_class.add(get_add[0], get_add[1])\nE       assert 0.4 == 1.0\nE        +  where 1.0 = <bound method TestCalcula.add of <Hogwarts_pytest_2.learn.learn_fixture.Calculator.TestCalcula object at 0x111a2e040>>(0.2, 0.8)\nE        +    where <bound method TestCalcula.add of <Hogwarts_pytest_2.learn.learn_fixture.Calculator.TestCalcula object at 0x111a2e040>> = <Hogwarts_pytest_2.learn.learn_fixture.Calculator.TestCalcula object at 0x111a2e040>.add\n\ntest_cal.py:36: AssertionError"}, "parameters": [{"name": "get_add", "value": "[0.2, 0.8, 0.4]"}], "start": 1619796375034, "stop": 1619796375035, "uuid": "5a086565-5d2e-4406-a4d6-8b295760e8d5", "historyId": "3700ef5107065c1329e3586e26c793cb", "testCaseId": "33547618802287a463ae4f779a0daaae", "fullName": "test_cal.TestJSQ#test_add_all", "labels": [{"name": "feature", "value": "计算器"}, {"name": "story", "value": "相加"}, {"name": "suite", "value": "test_cal"}, {"name": "subSuite", "value": "TestJSQ"}, {"name": "host", "value": "C02D559UML85"}, {"name": "thread", "value": "53256-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cal"}]}